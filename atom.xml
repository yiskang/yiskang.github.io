<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[13筆記]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yiskang.github.io//"/>
  <updated>2015-07-27T13:37:46.300Z</updated>
  <id>http://yiskang.github.io//</id>
  
  <author>
    <name><![CDATA[Eason Kang]]></name>
    <email><![CDATA[M9805508@mail.ntust.edu.tw]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS Pulldown List(Dropdown List、Combobox) by Swift]]></title>
    <link href="http://yiskang.github.io/2015/07/17/iOS-Pulldown-List-Dropdown-List%E3%80%81Combobox-by-Swift/"/>
    <id>http://yiskang.github.io/2015/07/17/iOS-Pulldown-List-Dropdown-List、Combobox-by-Swift/</id>
    <published>2015-07-17T11:30:46.000Z</published>
    <updated>2015-07-27T13:37:46.300Z</updated>
    <content type="html"><![CDATA[<p>最近因為工作的關係開始接觸 iOS SDK，Apple 官方文件算是頗齊全的，但相較於 Android 的手冊，還是略遜一疇（Google 大神還是比較有善～）。而本次目標是在 iOS 裡面新增一個簡單下拉式選單（Dropdown Menu、Pulldown Menu），憑著之前新增元件的經驗，我開始在 Xcode Object Library 裡搜尋下拉選單，但不管我打 Dropdown、Pulldown，還是 Combobox 就是沒有！！！一向帶給人有善印象的 Apple 咬一口，居然沒有提供下拉選單這種元件，不會要自己刻吧，崩潰。。。</p>
<p>還好現在第三方社群很發達，大家都很 Nice！拜了幾輪 Google 大神後，大神給了指示，原來在 iOS 裡下拉選單需要用 <a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextField_Class" target="_blank" rel="external">UITextField</a> 這個元件來改造，然後再加上一些其他元件完成選單的內容。選單的製作 Google 大神給了我兩個答案，一個是透過修改 UITextField InputView，另一個是使用 <a href="https://github.com/skywinder/ActionSheetPicker-3.0" target="_blank" rel="external">ActionSheetPicker-3.0</a>，以下將一一介紹：</p>
<h3 id="方法一：修改_UITextField_InputView（Ref-)">方法一：修改 UITextField InputView（<a href="https://github.com/Darkseal/DownPicker" target="_blank" rel="external">Ref.</a>)</h3><ol>
<li>首先在目標 ViewController 裡面新增幾個成員變數。<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">        <span class="comment">//UITextField 的 Reference Outlet 變數</span></span><br><span class="line">        <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> textField: <span class="type">UITextField</span>!</span><br><span class="line"></span><br><span class="line">        <span class="comment">//選單元件</span></span><br><span class="line">        private <span class="keyword">var</span> pickerView: <span class="type">UIPickerView</span>!;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下拉選單的內容</span></span><br><span class="line">        private <span class="keyword">var</span> dataArray: <span class="type">NSArray</span>!;</span><br><span class="line">        。。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>記得到 Storyboard 裡將Reference Outlet 變數與元件建立連結。</p>
<ol>
<li><p>在 ViewController 的 viewDidLoad() 裡改造 UITextField，現在先將它看起來像下拉選單（新增下拉符號）。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        。。。。。</span><br><span class="line">        <span class="comment">//指定下拉符號圖片</span></span><br><span class="line">        <span class="keyword">var</span> img = <span class="type">UIImage</span>(named: <span class="string">"dwn"</span>)</span><br><span class="line">        <span class="keyword">self</span>.textField.rightView = <span class="type">UIImageView</span>(image: img)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定圖片填滿右視圖</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightView!.contentMode = <span class="type">UIViewContentMode</span>.<span class="type">ScaleAspectFit</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightView!.clipsToBounds = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//顯示下拉符號</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightViewMode = <span class="type">UITextFieldViewMode</span>.<span class="type">Always</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//建立委托</span></span><br><span class="line">        <span class="keyword">self</span>.textField.delegate = <span class="keyword">self</span></span><br><span class="line">        。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>再來在 ViewController 裡新增兩個 function ，一個用來建立選單元件（使用 UIPickerView 及 Toolbar），一個用來告知 iOS 使用者已經完成選擇。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增選單元件</span></span><br><span class="line">private <span class="func"><span class="keyword">func</span> <span class="title">showPicker</span><span class="params">()</span></span> &#123;</span><br><span class="line">      <span class="comment">//使用 UIPickerView 做為選擇器</span></span><br><span class="line">      <span class="keyword">self</span>.pickerView = <span class="type">UIPickerView</span>()</span><br><span class="line"></span><br><span class="line">      <span class="comment">//顯示目前選擇指標</span></span><br><span class="line">      <span class="keyword">self</span>.pickerView.showSelectionIndicator = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//指定資料來源與委托</span></span><br><span class="line">      <span class="keyword">self</span>.pickerView.dataSource = <span class="keyword">self</span></span><br><span class="line">      <span class="keyword">self</span>.pickerView.delegate = <span class="keyword">self</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//使用 UIToolbar 建立選單元件與外觀</span></span><br><span class="line">      <span class="keyword">var</span> toolbar = <span class="type">UIToolbar</span>()</span><br><span class="line">      toolbar.barStyle = <span class="type">UIBarStyle</span>.<span class="type">Default</span></span><br><span class="line">      toolbar.sizeToFit()</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//新增完成選擇（Done）按鈕</span></span><br><span class="line">      <span class="keyword">var</span> doneButton = <span class="type">UIBarButtonItem</span>(title: <span class="string">"Done"</span>, style: <span class="type">UIBarButtonItemStyle</span>.<span class="type">Done</span>, target: <span class="keyword">self</span>, action: <span class="string">"doneClicked"</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//讓按鈕靠右對齊的元件</span></span><br><span class="line">      <span class="keyword">var</span> flexibleSpace = <span class="type">UIBarButtonItem</span>(barButtonSystemItem: <span class="type">UIBarButtonSystemItem</span>.<span class="type">FlexibleSpace</span>, target: <span class="literal">nil</span>, action: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//將元件放到 toolbar 裡面</span></span><br><span class="line">      toolbar.setItems([flexibleSpace, doneButton], animated: <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用者點擊成選擇（Done）按鈕後的動作</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">doneClicked</span><span class="params">()</span></span> &#123;</span><br><span class="line">      <span class="comment">//隱藏選單</span></span><br><span class="line">      <span class="keyword">self</span>.textField.resignFirstResponder()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>最後建立使用者與 UITextField 和 UIPickerView 的互動事件，以及設定 UIPickerView 的選項資料。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">UITextFieldDelegate</span>, <span class="title">UIPickerViewDataSource</span>, <span class="title">UIPickerViewDelegate</span> </span>&#123;</span><br><span class="line">        。。。。。</span><br><span class="line">        <span class="comment">//點擊 textField 的時候出現選單</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">textFieldShouldBeginEditing</span><span class="params">(textField: UITextField)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">              <span class="comment">//沒有資料的時候不顯示選單</span></span><br><span class="line">              <span class="keyword">if</span> <span class="keyword">self</span>.dataArray != <span class="literal">nil</span> &amp;&amp; <span class="keyword">self</span>.dataArray.<span class="built_in">count</span> &gt; <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="keyword">self</span>.showPicker(textField)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不讓使用者透過建盤輸入文字</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(textField: UITextField, shouldChangedCharactersInRange range: NSRange, replacementString string: String)</span></span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定選單項目的列數，例如時間 (小時：分鐘) 的 pickerView 就是 return 2</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">numberOfComponentInPickerView</span><span class="params">(pickerView: UIPickerView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定選單選項的數量</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">pickerView</span><span class="params">(pickerView: UIPickerView, numberOfRowsInComponent component: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">self</span>.dataArray.<span class="built_in">count</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定選單項目</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">pickerView</span><span class="params">(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int)</span></span> -&gt; <span class="type">String</span>! &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">self</span>.dataArray[row] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//當選單被滑動（Sliding）的時候，改變 textField 的值</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">pickerView</span><span class="params">(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int)</span></span> &#123;</span><br><span class="line">              <span class="keyword">self</span>.textField.text = <span class="keyword">self</span>.dataArray[row] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="方法二：使用_ActionSheetPicker-3-0">方法二：使用 ActionSheetPicker-3.0</h3><p><a href="https://github.com/skywinder/ActionSheetPicker-3.0" target="_blank" rel="external">ActionSheetPicker-3.0</a> 這個元件是 <a href="https://github.com/skywinder" target="_blank" rel="external">Petr Korolev</a> 這個好心人用 Objective-C 寫的，但我的專案目標語言是 Swift，所以要先設定套件關聯（Bridge），Petr Korolev 提供了三個方法安裝使用這個元件（CocoaPods、Carhage 和 Git Submodule），但可能我太好運了 CocoaPods 和 Carhage 的 Bridge 一直設定不起來，我只好用 Git Submodule，以下是我的作法：</p>
<ol>
<li><p>設定 Git Submodule</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打開 Terminal，然後切換目錄到目標專案的根目錄，最後打上這一行</span></span><br><span class="line">$ git submodule add https://github.com/skywinder/ActionSheetPicker-<span class="number">3.0</span>.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>用 Finder 打開專案目錄底下的 ActionSheetPicker-3.0 資料夾，然後將 /CoreActionSheetPicker/CoreActionSheetPicker.xcodeproj 拖到 Xcode 的 Project Navigator 裡面。</p>
<div style="width:25%;margin:0 auto;display:block;"><img src="/img/Dropdwn.png" alt="ProjectSetting"></div>
</li>
<li><p>用滑數點擊 Xcode Project Navigator 裡最上面的專案圖案（藍色的 Icon），右邊跳出專案設定，如下圖：</p>
<div style="width:70%;margin:0 auto;display:block;"><img src="/img/Dropdwn2.png" alt="ProjectSetting"></div>
</li>
<li><p>切換專案設定的標籤到 Build Phases，在 Target Dependancy 裡面新增 CoreActionSheetPicker.framework。</p>
<div style="width:65%;margin:0 auto;display:block;"><img src="/img/Dropdwn3.png" alt="ProjectSetting"></div>
</li>
<li><p>一樣在 Build Phases 裡，新增一個 New Copy Files Phase，將其重新命名為 Copy Frameworks。</p>
<div style="width:35%;margin:0 auto;display:block;"><img src="/img/Dropdwn4.png" alt="ProjectSetting"></div><br><div style="width:35%;margin:0 auto;display:block;"><img src="/img/Dropdwn5.png" alt="ProjectSetting"></div>
</li>
<li><p>在 Copy Frameworks 裡，選擇 Destination 為 Frameworks，然後新增 CoreActionSheetPicker.framework。</p>
<div style="width:65%;margin:0 auto;display:block;"><img src="/img/Dropdwn6.png" alt="ProjectSetting"></div>
</li>
<li><p>隨便新增一個 Objective-C 檔案到專案裡面，然後 Xcode 會詢問是不是要新增 Objective-C Bridge Header，請按「是」。</p>
<div style="width:60%;margin:0 auto;display:block;"><img src="/img/Dropdwn7.png" alt="ProjectSetting"></div><br><div style="width:60%;margin:0 auto;display:block;"><img src="/img/Dropdwn8.png" alt="ProjectSetting"></div>
</li>
<li><p>在「專案名稱-Bridging-Header.h」裡新增下面這行：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"CoreActionSheetPicker/CoreActionSheetPicker.h"</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在目標 ViewController 裡面新增 Reference Outlet 變數和資料容器，然後將 Reference Outlet 元件建立連結。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">        <span class="comment">//UITextField 的 Reference Outlet 變數</span></span><br><span class="line">        <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> textField: <span class="type">UITextField</span>!</span><br><span class="line"></span><br><span class="line">        <span class="comment">//下拉選單的內容</span></span><br><span class="line">        private <span class="keyword">var</span> dataArray: <span class="type">NSArray</span>!;</span><br><span class="line">        。。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在 ViewController 的 viewDidLoad() 裡將改造 UITextField 改造成下拉選單。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        。。。。。</span><br><span class="line">        <span class="comment">//指定下拉符號圖片</span></span><br><span class="line">        <span class="keyword">var</span> img = <span class="type">UIImage</span>(named: <span class="string">"dwn"</span>)</span><br><span class="line">        <span class="keyword">self</span>.textField.rightView = <span class="type">UIImageView</span>(image: img)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定圖片填滿右視圖</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightView!.contentMode = <span class="type">UIViewContentMode</span>.<span class="type">ScaleAspectFit</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightView!.clipsToBounds = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//顯示下拉符號</span></span><br><span class="line">        <span class="keyword">self</span>.textField.rightViewMode = <span class="type">UITextFieldViewMode</span>.<span class="type">Always</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//建立委托</span></span><br><span class="line">        <span class="keyword">self</span>.textField.delegate = <span class="keyword">self</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//設定使用者點擊事件</span></span><br><span class="line">        <span class="keyword">self</span>.textField.addTarget(<span class="keyword">self</span>, action: <span class="string">"selectClicked:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchDown</span>);</span><br><span class="line">        。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>最後建立使用者與 UITextField 的互動事件，以及設定 ActionSheetPicker。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">UITextFieldDelegate</span> </span>&#123;</span><br><span class="line">        。。。。。</span><br><span class="line">        <span class="comment">//設定 textField 唯讀</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">textFieldShouldBeginEditing</span><span class="params">(textField: UITextField)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不讓使用者透過建盤輸入文字</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">textField</span><span class="params">(textField: UITextField, shouldChangedCharactersInRange range: NSRange, replacementString string: String)</span></span> &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用者點擊事件</span></span><br><span class="line">        <span class="func"><span class="keyword">func</span> <span class="title">selectClicked</span><span class="params">(sender: UITextField)</span></span> &#123;</span><br><span class="line">              <span class="type">ActionSheetStringPicker</span>.showPickerWithTitle(<span class="literal">nil</span>, rows: <span class="keyword">self</span>.dataArray, initialSelection: <span class="number">0</span>, doneBlock: &#123;</span><br><span class="line">                  picker, value, index <span class="keyword">in</span></span><br><span class="line">                  <span class="keyword">self</span>.textField.text = value</span><br><span class="line">                  <span class="keyword">return</span></span><br><span class="line">              &#125;, cancelBlock: &#123; </span><br><span class="line">                  <span class="type">ActionStringCancelBlock</span> <span class="keyword">in</span></span><br><span class="line">                  <span class="keyword">return</span></span><br><span class="line">              &#125;, origin: sender.superview)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近因為工作的關係開始接觸 iOS SDK，Apple 官方文件算是頗齊全的，但相較於 Android 的手冊，還是略遜一疇（Google 大神還是比較有善～）。而本次目標是在 iOS 裡面新增一個簡單下拉式選單（Dropdown Menu、Pulldown Menu），憑]]>
    </summary>
    
      <category term="Objective-C" scheme="http://yiskang.github.io/tags/Objective-C/"/>
    
      <category term="Swift" scheme="http://yiskang.github.io/tags/Swift/"/>
    
      <category term="iOS" scheme="http://yiskang.github.io/tags/iOS/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="iOS" scheme="http://yiskang.github.io/categories/Tech/iOS/"/>
    
      <category term="UI" scheme="http://yiskang.github.io/categories/Tech/iOS/UI/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Add UITextField on UIView Programmitically by Swift]]></title>
    <link href="http://yiskang.github.io/2015/07/17/Add-UITextField-on-UIView-Programmitically-by-Swift/"/>
    <id>http://yiskang.github.io/2015/07/17/Add-UITextField-on-UIView-Programmitically-by-Swift/</id>
    <published>2015-07-17T03:44:40.000Z</published>
    <updated>2015-07-27T14:06:31.560Z</updated>
    <content type="html"><![CDATA[<p>好像有點久沒有寫文章。。。</p>
<p>最近開始玩 iOS SDK，今天不知道哪根筋不對，突然不想用 Interface Builder 拉 UI，想直接用寫 Code 的方式生，所以我就翻了一下關方手冊，還有拜了 Google 大神！萬事起頭難，我們就先從簡單的開始吧，以下是我找到的方法，請參考！</p>
<h3 id="最簡單的作法">最簡單的作法</h3><p>從官方手冊上看到最簡單的辦法就是直接呼叫 UITextField(frame:) 這個建構式，但這個建構式必須傳入一個 CGRect 型別的 frame 變數，到這個 frame 要怎麼建立勒？官方提供了 <a href="https://developer.apple.com/library/prerelease/ios/documentation/GraphicsImaging/Reference/CGGeometry/index.html#//apple_ref/c/func/CGRectMake" target="_blank" rel="external">CGRectMake(x, y, width, height)</a> 這個方法可以快速的產生 UITextField 需要的 frame，說簡單一點就是透過 CGRectMake() 告訴 iOS 這個 UITextField 的外框多大、位置在哪，最後透過 addSubview() 這個方法將 UITextField 放到 view 上面。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//產生 UITextField 元件</span></span><br><span class="line"><span class="keyword">var</span> txtField = <span class="type">UITextField</span>(frame: <span class="type">CGRectMake</span>(<span class="number">10</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//放到 view 上面</span></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(txtField);</span><br></pre></td></tr></table></figure></p>
<h3 id="進階的作法">進階的作法</h3><p>透過上述的方式可以快速產生一個白白的 UITextField，但如果想產生像 Interface Builder 拉出來的，要怎麼做？除了上面那兩行外，還做一些額外的設定，這樣 UITextField 就可以像 iOS 預設的一樣簡單又漂亮！以下是我的做法：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txtField = <span class="type">UITextField</span>(frame: <span class="type">CGRectMake</span>(<span class="number">10</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">30</span>));</span><br><span class="line">txtField.borderStyle = <span class="type">UITextBorderStyle</span>.<span class="type">RoundedRect</span>;</span><br><span class="line">txtField.font = <span class="type">UIFont</span>.systemFontOfSize(<span class="number">15</span>);</span><br><span class="line">txtField.placeholder = <span class="string">"Select Drawing"</span>;</span><br><span class="line">txtField.autocorrectionType = <span class="type">UITextAutocorrectionType</span>.<span class="type">No</span>;</span><br><span class="line">txtField.keyboardType = <span class="type">UIKeyboardType</span>.<span class="type">Default</span>;</span><br><span class="line">txtField.returnKeyType = <span class="type">UIReturnKeyType</span>.<span class="type">Done</span>;</span><br><span class="line">txtField.clearButtonMode = <span class="type">UITextFieldViewMode</span>.<span class="type">WhileEditing</span>;</span><br><span class="line">txtField.contentVerticalAlignment = <span class="type">UIControlContentVerticalAlignment</span>.<span class="type">Center</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(txtField);</span><br></pre></td></tr></table></figure></p>
<p>Ref. <a href="https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewPG_iPhoneOS/CreatingViews/CreatingViews.html#//apple_ref/doc/uid/TP40009503-CH5-SW1" target="_blank" rel="external">View Programming Guilde for iOS</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>好像有點久沒有寫文章。。。</p>
<p>最近開始玩 iOS SDK，今天不知道哪根筋不對，突然不想用 Interface Builder 拉 UI，想直接用寫 Code 的方式生，所以我就翻了一下關方手冊，還有拜了 Google 大神！萬事起頭難，我們就先從簡單的開始吧，]]>
    </summary>
    
      <category term="Swift" scheme="http://yiskang.github.io/tags/Swift/"/>
    
      <category term="UI" scheme="http://yiskang.github.io/tags/UI/"/>
    
      <category term="iOS" scheme="http://yiskang.github.io/tags/iOS/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="iOS" scheme="http://yiskang.github.io/categories/Tech/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Use Atlassian Source Tree embedded git in Windows]]></title>
    <link href="http://yiskang.github.io/2015/05/06/Use-Atlassian-Source-Tree-embedded-git-in-Windows/"/>
    <id>http://yiskang.github.io/2015/05/06/Use-Atlassian-Source-Tree-embedded-git-in-Windows/</id>
    <published>2015-05-06T10:01:09.000Z</published>
    <updated>2015-05-08T16:33:18.350Z</updated>
    <content type="html"><![CDATA[<p>前些日子因為要在 Mac OS X 上面安裝 Git 的圖形化管理程式，接觸了 Atlassian SourceTree 跟 Github for Mac，但由於工作上有需要使用 Atlassian Bitbucket，所以最後我選擇了 SourceTree。最近因為一些原因工作用的 PC 被還原了，什麼都沒有了，只好一一重裝！裝好 SourceTree 後，我發現 SourceTree 本身就有將 Git for Windows 的執行檔包起來，所以不用另外再裝 Git，但如果想直接使用 SourceTree 內建的 Git 工具要怎麼做呢？以下是我所做的步驟供大家參考：</p>
<ol>
<li><p>Atlassian SourceTree 附帶 Git 執行檔的位置在：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%USERPROFILE%\AppData\Local\Atlassian\SourceTree\git_local\bin</span><br></pre></td></tr></table></figure>
</li>
<li><p>將 Git 執行檔的位置加到使用者環境變數（User Environment Variables）：</p>
<div style="width:300px;margin:0 auto;display:block;"><br><img src="/img/GitPath.jpg" alt="GitImg"><br></div></li>
<li>重開命令提示字元（Command Prompt）或是 PowerShell，就可以開心使用摟～</li>
</ol>
<p>Reference: <a href="https://answers.atlassian.com/questions/245850/how-to-run-a-git-command-as-a-custom-action" target="_blank" rel="external">How to run a git command as a custom action?</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>前些日子因為要在 Mac OS X 上面安裝 Git 的圖形化管理程式，接觸了 Atlassian SourceTree 跟 Github for Mac，但由於工作上有需要使用 Atlassian Bitbucket，所以最後我選擇了 SourceTree。最近因為一些原]]>
    </summary>
    
      <category term="Git" scheme="http://yiskang.github.io/tags/Git/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="Windows" scheme="http://yiskang.github.io/categories/Tech/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Revit debugging on Visual Studio 2013]]></title>
    <link href="http://yiskang.github.io/2015/05/06/Revit-debugging-on-Visual-Studio-2013/"/>
    <id>http://yiskang.github.io/2015/05/06/Revit-debugging-on-Visual-Studio-2013/</id>
    <published>2015-05-06T09:56:25.000Z</published>
    <updated>2015-05-08T17:04:47.480Z</updated>
    <content type="html"><![CDATA[<p>最近萬惡的微軟（M$）突然大爆發，一直開源又將 Visual Studio 2013 Professional 釋出為 Visual Studio Community 版，免費提供大家使用。用 Visual Studio 2012 也好一陣子了，所以我想換口味試看看～ :P 但裝好 2013 拿來 Debug Revit 2016 增益集（Addin）的時候，卻發現 Revit 掛掉 Crash 了！</p>
<div style="width:600px;margin:0 auto;display:block;"><br><img src="/img/RevitDebuggingError.jpg" alt="RevitImg"><br></div><br>所幸拜了 Google 大神後發現了解法，只要將使用除錯器的相容模式（Debugging in  Managed Compatibility Mode）就可以解決了！以下是我所做的步㵵供大家參考：<br>1. 到工具（Tools） &gt; 選項（Options），紅框所選位置：<br><div style="width:300px;margin:0 auto;display:block;"><br><img src="/img/RevitDebuggingError2.jpg" alt="RevitImg"><br></div>

<ol>
<li><p>點選除錯（Debugging）項目，在點選一般（General），最後將使用相容模式（Use Managed Compatibility Mode）勾選起來，按下確認（OK）：</p>
<div style="width:600px;margin:0 auto;display:block;"><br><img src="/img/RevitDebuggingError3.jpg" alt="RevitImg"><br></div>
</li>
<li><p>可以開心使用 Visual Studio 2013 對 Revit 增益集進行除錯（Trace Debugging）摟～</p>
</li>
</ol>
<p>Reference: <a href="http://revitlearningclub.blogspot.tw/2015/01/getting-revit-to-start-while-debugging.html" target="_blank" rel="external">Getting Revit to start while debugging API apps with Visual Studio 2013</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近萬惡的微軟（M$）突然大爆發，一直開源又將 Visual Studio 2013 Professional 釋出為 Visual Studio Community 版，免費提供大家使用。用 Visual Studio 2012 也好一陣子了，所以我想換口味試看看～ :P]]>
    </summary>
    
      <category term="Plugin" scheme="http://yiskang.github.io/tags/Plugin/"/>
    
      <category term="Revit" scheme="http://yiskang.github.io/tags/Revit/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="BIM" scheme="http://yiskang.github.io/categories/Tech/BIM/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mission Control 沒有反應怎麼辦？]]></title>
    <link href="http://yiskang.github.io/2015/05/02/Mission-Control-%E6%B2%92%E6%9C%89%E5%8F%8D%E6%87%89%E6%80%8E%E9%BA%BC%E8%BE%A6%EF%BC%9F/"/>
    <id>http://yiskang.github.io/2015/05/02/Mission-Control-沒有反應怎麼辦？/</id>
    <published>2015-05-02T01:49:33.000Z</published>
    <updated>2015-05-05T09:41:16.390Z</updated>
    <content type="html"><![CDATA[<p>最近變的很不愛關電腦，常常螢幕一蓋就收到包包裡了。但久沒有重開機，有些應用程式就會不乖，突然沒有反應了，像這次不乖的就是 Mission Control。它掛掉的當下，我剛好在用 Evernote 語音記事記錄演討會的內容，沒辦法重開機，非常囧！！！還好 Mission Control 可以在不重開機的狀態下重開，以下是我使用的方法，供大家參考！（當然在使用前必需先開起 Terminal ～）</p>
<h3 id="比較暴力的作法">比較暴力的作法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ killall Dock</span><br></pre></td></tr></table></figure>
<h3 id="溫柔的作法">溫柔的作法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ osascript <span class="operator">-e</span> <span class="string">'quit application "Dock"'</span></span><br></pre></td></tr></table></figure>
<p>Reference: <a href="http://hints.macworld.com/article.php?story=20110802073945173" target="_blank" rel="external">10.7: Restart Mission Control</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近變的很不愛關電腦，常常螢幕一蓋就收到包包裡了。但久沒有重開機，有些應用程式就會不乖，突然沒有反應了，像這次不乖的就是 Mission Control。它掛掉的當下，我剛好在用 Evernote 語音記事記錄演討會的內容，沒辦法重開機，非常囧！！！還好 Mission C]]>
    </summary>
    
      <category term="OS X" scheme="http://yiskang.github.io/tags/OS-X/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="Mac OS" scheme="http://yiskang.github.io/categories/Tech/Mac-OS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Terminal 開啟 Sublime]]></title>
    <link href="http://yiskang.github.io/2015/04/29/%E5%9C%A8Terminal%E9%96%8B%E5%95%9FSublime/"/>
    <id>http://yiskang.github.io/2015/04/29/在Terminal開啟Sublime/</id>
    <published>2015-04-29T09:14:54.000Z</published>
    <updated>2015-05-06T14:21:05.330Z</updated>
    <content type="html"><![CDATA[<p>開使用 Hexo 寫筆記以後，常常都要先 hexo new 一則文章，在用 vim 開啟他。然後問題就來了，我很多時候都要在文章裡面貼上程式碼的內容，但因為我有開啟 vim 的自動縮排功能，直接貼上去後，程式碼就會被縮排縮到找不到內文，自作孽啊… 囧rz</p>
<p>就因為這樣我想找個類似 UltraEdit 的軟體來用，然後聽說 Sublime 似乎不錯，但每次開啟 Hexo 的 Markdown 檔案都要做拖拉的動作，這時候我的懶毛病就犯了！好我想讓 Sublime 跟 vim 一樣可以直接在 Terminal 開啟文章的 md 檔，那要怎麼做呢？以下就是我所做的設定：</p>
<ol>
<li><p>先測試可不可以直接啟動 Sublime</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /Applications/Sublime\ Text\ <span class="number">2</span>.app/Contents/SharedSupport/bin/subl</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果可以的話，現在為 Sublime 建立一個 alias：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> sublime=<span class="string">"/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>然後把他加到 shell 的 rc 檔裡面，以下以 zsh 為例：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">'alias sublime="/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"'</span> &gt; ~/.zshrc</span><br><span class="line">$ <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>Reference: <a href="http://azyukei.github.io/2015/04/Sublime-Text-OSX-Terminal-Launch/" target="_blank" rel="external">在 Terminal 啟動 Sublime Text</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>開使用 Hexo 寫筆記以後，常常都要先 hexo new 一則文章，在用 vim 開啟他。然後問題就來了，我很多時候都要在文章裡面貼上程式碼的內容，但因為我有開啟 vim 的自動縮排功能，直接貼上去後，程式碼就會被縮排縮到找不到內文，自作孽啊… 囧rz</p>
<p>就因]]>
    </summary>
    
      <category term="Hexo" scheme="http://yiskang.github.io/tags/Hexo/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
      <category term="OS X" scheme="http://yiskang.github.io/categories/Tech/OS-X/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git submodule 介紹]]></title>
    <link href="http://yiskang.github.io/2015/04/16/git-submodule/"/>
    <id>http://yiskang.github.io/2015/04/16/git-submodule/</id>
    <published>2015-04-16T05:46:36.000Z</published>
    <updated>2015-04-30T02:32:27.710Z</updated>
    <content type="html"><![CDATA[<h3 id="簡介">簡介</h3><p>最近為了方便管理專案，將他拆成了好幾個小專案來維護，然後透過參考引入想要的檔案。但 git 沒辦法像 SVN 那樣只單獨下載一個檔案，它必需整個 repository 都 clone 下來，可是整個 clone 下來還要把想要的檔案分別丟到對的位置，這樣好像太麻煩了，還好 git 有提供 submodule 這個機制可以用來做外部資源參考與更新，解救了我這個懶人～～～ XD</p>
<h3 id="新增_submodule">新增 submodule</h3><p>指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add &#123;repository&#125;      &#123;path/folder name&#125;</span><br></pre></td></tr></table></figure></p>
<p>範例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add https://github.com/yiskang/hexo-theme-pure.git  theme/pure</span><br></pre></td></tr></table></figure></p>
<p><b>注意：</b>在下新增指令前，請注意<span style="color:red;font-wegiht:bold;"> {path/folder name} </span>的部份，先不要新增空目錄，git 自己會新增，不然 會產生衝突，submodule 就會無法新增。<b>不需要為 submodule 建立目錄</b></p>
<p>新增完後會看到類似下面的內容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Cloning into <span class="string">'theme/pure'</span>...</span><br><span class="line">remote: Counting objects: <span class="number">202</span>, done.</span><br><span class="line">remote: Compressing objects: <span class="number">100</span>% (<span class="number">27</span>/<span class="number">27</span>), done.</span><br><span class="line">remote: Total <span class="number">202</span> (delta <span class="number">14</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">175</span></span><br><span class="line">Receiving objects: <span class="number">100</span>% (<span class="number">202</span>/<span class="number">202</span>), <span class="number">49.48</span> KiB | <span class="number">0</span> bytes/s, done.</span><br><span class="line">Resolving deltas: <span class="number">100</span>% (<span class="number">84</span>/<span class="number">84</span>), done.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure></p>
<p>這時候輸入 <code>git status</code> ，就會發現多了兩檔案需要 commit:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Initial commit</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git rm --cached &lt;file&gt;..."</span> to unstage)</span><br><span class="line">      new file:   .gitmodules</span><br><span class="line">      new file:   theme/pure</span><br></pre></td></tr></table></figure></p>
<p>此外，git 會將 submodule 的資訊記錄在 .gitmodules 裡面:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[submodule <span class="string">"theme/pure"</span>]</span><br><span class="line">      path = theme/pure</span><br><span class="line">      url = https://github.com/yiskang/hexo-theme-pure.git</span><br></pre></td></tr></table></figure></p>
<p>最後記得要 commit :<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"Add submodule pure theme"</span></span><br></pre></td></tr></table></figure></p>
<h3 id="更新_submodule">更新 submodule</h3><p>每個 submodule 獨自更新：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;module folder&#125;</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure></p>
<p>但我很懶的，都用這個直接更新整個專案的 submodule<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule foreach git pull</span><br></pre></td></tr></table></figure></p>
<h3 id="下載有_submodule_的_repository">下載有 submodule 的 repository</h3><p>下載 remote repository 到 local 端：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yiskang/Blog.git</span><br></pre></td></tr></table></figure></p>
<p>註冊 submodule 到 .gitmodules ，告訴 git 要新增哪些 modules<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br></pre></td></tr></table></figure></p>
<p>將 submodule 的內容下載下來：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br></pre></td></tr></table></figure></p>
<h3 id="移除_submodule">移除 submodule</h3><p>如果不要想使用某個 submodule 了，要移除它要怎麼做呢？我們可以透過下面的步驟將它移除，但在移除前還有一些動作要做！移除 submodule 時得告訴 git 你要移除的 module 名稱，這名稱要去哪找？透過 .gitmodules 就可以啦，在新增 submodule 時，git就將它記錄在 .gitmodules 裡了。那假設現在要移除 pure theme module，我們可以在 .gitmodules 找到這樣的描述：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[submodule <span class="string">"theme/pure"</span>]</span><br><span class="line">      path = theme/pure</span><br><span class="line">      url = https://github.com/yiskang/hexo-theme-pure.git</span><br></pre></td></tr></table></figure></p>
<p>module 明稱就是上面的 path，現在要移除 pure theme module，所以就是 theme/pure。 接著就可以開始進行移除了，移除 submodule 的命令就是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git submodule deinit &#123;path/folder name&#125;</span><br><span class="line">git rm &#123;path/folder name&#125;     or  git rm --chched &#123;path/folder name&#125;</span><br></pre></td></tr></table></figure></p>
<p>現在要將 pure theme module 移除，將上面的 {path/folder name} 換成 theme/pure：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先移除 submodule 裡面的內容</span></span><br><span class="line">git submodule deinit theme/pure</span><br><span class="line"><span class="comment"># 移除資料夾</span></span><br><span class="line">git rm theme/pure</span><br><span class="line"><span class="comment"># 或者你不想留下先前的修改記錄，要將它從 Woking Tree 移除</span></span><br><span class="line">git rm --cached theme/pure</span><br></pre></td></tr></table></figure></p>
<p>移除完以後，可以從 git status 看到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line">      modified:   .gitmodules</span><br><span class="line">      deleted:    theme/pure</span><br></pre></td></tr></table></figure></p>
<p>最後記得 commit：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"Remove submodule pure theme"</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="簡介">簡介</h3><p>最近為了方便管理專案，將他拆成了好幾個小專案來維護，然後透過參考引入想要的檔案。但 git 沒辦法像 SVN 那樣只單獨下載一個檔案，它必需整個 repository 都 clone 下來，可是整個 clone 下來還要把想要的檔案分別]]>
    </summary>
    
      <category term="git" scheme="http://yiskang.github.io/tags/git/"/>
    
      <category term="Tech" scheme="http://yiskang.github.io/categories/Tech/"/>
    
  </entry>
  
</feed>